

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 01 14:43:30 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   007E4A                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _display_array
    56   007E4A  003F               	dw	63
    57   007E4C  0006               	dw	6
    58   007E4E  005B               	dw	91
    59   007E50  004F               	dw	79
    60   007E52  0066               	dw	102
    61   007E54  006D               	dw	109
    62   007E56  007C               	dw	124
    63   007E58  0047               	dw	71
    64   007E5A  007F               	dw	127
    65   007E5C  0067               	dw	103
    66   007E5E  0077               	dw	119
    67   007E60  007C               	dw	124
    68   007E62  0039               	dw	57
    69   007E64  005E               	dw	94
    70   007E66  0079               	dw	121
    71   007E68  0071               	dw	113
    72   000000                     _PORTD	set	3971
    73   000000                     _TRISB	set	3987
    74   000000                     _ADCON1	set	4033
    75   000000                     _TRISD	set	3989
    76   000000                     _LATB	set	3978
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81   007E6A                     __pcinit:
    82                           	callstack 0
    83   007E6A                     start_initialization:
    84                           	callstack 0
    85   007E6A                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (32 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90   007E6A  0E4A               	movlw	low __pidataCOMRAM
    91   007E6C  6EF6               	movwf	tblptrl,c
    92   007E6E  0E7E               	movlw	high __pidataCOMRAM
    93   007E70  6EF7               	movwf	tblptrh,c
    94   007E72  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95   007E74  6EF8               	movwf	tblptru,c
    96   007E76  EE00  F001         	lfsr	0,__pdataCOMRAM
    97   007E7A  EE10 F020          	lfsr	1,32
    98   007E7E                     copy_data0:
    99   007E7E  0009               	tblrd		*+
   100   007E80  CFF5 FFEE          	movff	tablat,postinc0
   101   007E84  50E5               	movf	postdec1,w,c
   102   007E86  50E1               	movf	fsr1l,w,c
   103   007E88  E1FA               	bnz	copy_data0
   104   007E8A                     end_of_initialization:
   105                           	callstack 0
   106   007E8A                     __end_of__initialization:
   107                           	callstack 0
   108   007E8A  0100               	movlb	0
   109   007E8C  EF48  F03F         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	dataCOMRAM
   112   000001                     __pdataCOMRAM:
   113                           	callstack 0
   114   000001                     _display_array:
   115                           	callstack 0
   116   000001                     	ds	32
   117                           
   118                           	psect	cstackCOMRAM
   119   000000                     __pcstackCOMRAM:
   120                           	callstack 0
   121   000000                     
   122                           ; 1 bytes @ 0x0
   123 ;;
   124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   125 ;;
   126 ;; *************** function _main *****************
   127 ;; Defined at:
   128 ;;		line 15 in file "main.c"
   129 ;; Parameters:    Size  Location     Type
   130 ;;		None
   131 ;; Auto vars:     Size  Location     Type
   132 ;;		None
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   142 ;;      Params:         0       0       0       0       0       0       0       0       0
   143 ;;      Locals:         0       0       0       0       0       0       0       0       0
   144 ;;      Temps:          0       0       0       0       0       0       0       0       0
   145 ;;      Totals:         0       0       0       0       0       0       0       0       0
   146 ;;Total ram usage:        0 bytes
   147 ;; This function calls:
   148 ;;		Nothing
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155   007E90                     __ptext0:
   156                           	callstack 0
   157   007E90                     _main:
   158                           	callstack 31
   159   007E90                     l17:
   160   007E90                     
   161                           ;main.c: 17:         ADCON1 = 0B00001111;
   162   007E90  0E0F               	movlw	15
   163   007E92  6EC1               	movwf	193,c	;volatile
   164                           
   165                           ;main.c: 18:         TRISB = 0;
   166   007E94  0E00               	movlw	0
   167   007E96  6E93               	movwf	147,c	;volatile
   168                           
   169                           ;main.c: 19:         TRISD = 1;
   170   007E98  0E01               	movlw	1
   171   007E9A  6E95               	movwf	149,c	;volatile
   172                           
   173                           ;main.c: 20:         if(PORTD == 0){
   174   007E9C  5083               	movf	131,w,c	;volatile
   175   007E9E  A4D8               	btfss	status,2,c
   176   007EA0  EF54  F03F         	goto	u11
   177   007EA4  EF56  F03F         	goto	u10
   178   007EA8                     u11:
   179   007EA8  EF58  F03F         	goto	l716
   180   007EAC                     u10:
   181   007EAC                     
   182                           ;main.c: 21:             LATB = display_array[0];
   183   007EAC  C001  FF8A         	movff	_display_array,3978	;volatile
   184   007EB0                     l716:
   185                           
   186                           ;main.c: 23:         if(PORTD == 1){
   187   007EB0  0483               	decf	131,w,c	;volatile
   188   007EB2  A4D8               	btfss	status,2,c
   189   007EB4  EF5E  F03F         	goto	u21
   190   007EB8  EF60  F03F         	goto	u20
   191   007EBC                     u21:
   192   007EBC  EF62  F03F         	goto	l720
   193   007EC0                     u20:
   194   007EC0                     
   195                           ;main.c: 24:             LATB = display_array[1];
   196   007EC0  C003  FF8A         	movff	_display_array+2,3978	;volatile
   197   007EC4                     l720:
   198                           
   199                           ;main.c: 26:         if(PORTD == 2){
   200   007EC4  0E02               	movlw	2
   201   007EC6  1883               	xorwf	131,w,c	;volatile
   202   007EC8  A4D8               	btfss	status,2,c
   203   007ECA  EF69  F03F         	goto	u31
   204   007ECE  EF6B  F03F         	goto	u30
   205   007ED2                     u31:
   206   007ED2  EF6D  F03F         	goto	l724
   207   007ED6                     u30:
   208   007ED6                     
   209                           ;main.c: 27:             LATB = display_array[2];
   210   007ED6  C005  FF8A         	movff	_display_array+4,3978	;volatile
   211   007EDA                     l724:
   212                           
   213                           ;main.c: 29:         if(PORTD == 3){
   214   007EDA  0E03               	movlw	3
   215   007EDC  1883               	xorwf	131,w,c	;volatile
   216   007EDE  A4D8               	btfss	status,2,c
   217   007EE0  EF74  F03F         	goto	u41
   218   007EE4  EF76  F03F         	goto	u40
   219   007EE8                     u41:
   220   007EE8  EF78  F03F         	goto	l728
   221   007EEC                     u40:
   222   007EEC                     
   223                           ;main.c: 30:             LATB = display_array[3];
   224   007EEC  C007  FF8A         	movff	_display_array+6,3978	;volatile
   225   007EF0                     l728:
   226                           
   227                           ;main.c: 32:         if(PORTD == 4){
   228   007EF0  0E04               	movlw	4
   229   007EF2  1883               	xorwf	131,w,c	;volatile
   230   007EF4  A4D8               	btfss	status,2,c
   231   007EF6  EF7F  F03F         	goto	u51
   232   007EFA  EF81  F03F         	goto	u50
   233   007EFE                     u51:
   234   007EFE  EF83  F03F         	goto	l732
   235   007F02                     u50:
   236   007F02                     
   237                           ;main.c: 33:             LATB = display_array[4];
   238   007F02  C009  FF8A         	movff	_display_array+8,3978	;volatile
   239   007F06                     l732:
   240                           
   241                           ;main.c: 35:         if(PORTD == 5){
   242   007F06  0E05               	movlw	5
   243   007F08  1883               	xorwf	131,w,c	;volatile
   244   007F0A  A4D8               	btfss	status,2,c
   245   007F0C  EF8A  F03F         	goto	u61
   246   007F10  EF8C  F03F         	goto	u60
   247   007F14                     u61:
   248   007F14  EF8E  F03F         	goto	l736
   249   007F18                     u60:
   250   007F18                     
   251                           ;main.c: 36:             LATB = display_array[5];
   252   007F18  C00B  FF8A         	movff	_display_array+10,3978	;volatile
   253   007F1C                     l736:
   254                           
   255                           ;main.c: 38:         if(PORTD == 6){
   256   007F1C  0E06               	movlw	6
   257   007F1E  1883               	xorwf	131,w,c	;volatile
   258   007F20  A4D8               	btfss	status,2,c
   259   007F22  EF95  F03F         	goto	u71
   260   007F26  EF97  F03F         	goto	u70
   261   007F2A                     u71:
   262   007F2A  EF99  F03F         	goto	l740
   263   007F2E                     u70:
   264   007F2E                     
   265                           ;main.c: 39:             LATB = display_array[6];
   266   007F2E  C00D  FF8A         	movff	_display_array+12,3978	;volatile
   267   007F32                     l740:
   268                           
   269                           ;main.c: 41:         if(PORTD == 7){
   270   007F32  0E07               	movlw	7
   271   007F34  1883               	xorwf	131,w,c	;volatile
   272   007F36  A4D8               	btfss	status,2,c
   273   007F38  EFA0  F03F         	goto	u81
   274   007F3C  EFA2  F03F         	goto	u80
   275   007F40                     u81:
   276   007F40  EFA4  F03F         	goto	l744
   277   007F44                     u80:
   278   007F44                     
   279                           ;main.c: 42:             LATB = display_array[7];
   280   007F44  C00F  FF8A         	movff	_display_array+14,3978	;volatile
   281   007F48                     l744:
   282                           
   283                           ;main.c: 44:         if(PORTD == 8){
   284   007F48  0E08               	movlw	8
   285   007F4A  1883               	xorwf	131,w,c	;volatile
   286   007F4C  A4D8               	btfss	status,2,c
   287   007F4E  EFAB  F03F         	goto	u91
   288   007F52  EFAD  F03F         	goto	u90
   289   007F56                     u91:
   290   007F56  EFAF  F03F         	goto	l748
   291   007F5A                     u90:
   292   007F5A                     
   293                           ;main.c: 45:             LATB = display_array[8];
   294   007F5A  C011  FF8A         	movff	_display_array+16,3978	;volatile
   295   007F5E                     l748:
   296                           
   297                           ;main.c: 47:         if(PORTD == 9){
   298   007F5E  0E09               	movlw	9
   299   007F60  1883               	xorwf	131,w,c	;volatile
   300   007F62  A4D8               	btfss	status,2,c
   301   007F64  EFB6  F03F         	goto	u101
   302   007F68  EFB8  F03F         	goto	u100
   303   007F6C                     u101:
   304   007F6C  EFBA  F03F         	goto	l752
   305   007F70                     u100:
   306   007F70                     
   307                           ;main.c: 48:             LATB = display_array[9];
   308   007F70  C013  FF8A         	movff	_display_array+18,3978	;volatile
   309   007F74                     l752:
   310                           
   311                           ;main.c: 50:         if(PORTD == 10){
   312   007F74  0E0A               	movlw	10
   313   007F76  1883               	xorwf	131,w,c	;volatile
   314   007F78  A4D8               	btfss	status,2,c
   315   007F7A  EFC1  F03F         	goto	u111
   316   007F7E  EFC3  F03F         	goto	u110
   317   007F82                     u111:
   318   007F82  EFC5  F03F         	goto	l756
   319   007F86                     u110:
   320   007F86                     
   321                           ;main.c: 51:             LATB = display_array[10];
   322   007F86  C015  FF8A         	movff	_display_array+20,3978	;volatile
   323   007F8A                     l756:
   324                           
   325                           ;main.c: 53:         if(PORTD == 11){
   326   007F8A  0E0B               	movlw	11
   327   007F8C  1883               	xorwf	131,w,c	;volatile
   328   007F8E  A4D8               	btfss	status,2,c
   329   007F90  EFCC  F03F         	goto	u121
   330   007F94  EFCE  F03F         	goto	u120
   331   007F98                     u121:
   332   007F98  EFD0  F03F         	goto	l760
   333   007F9C                     u120:
   334   007F9C                     
   335                           ;main.c: 54:             LATB = display_array[11];
   336   007F9C  C017  FF8A         	movff	_display_array+22,3978	;volatile
   337   007FA0                     l760:
   338                           
   339                           ;main.c: 56:         if(PORTD == 12){
   340   007FA0  0E0C               	movlw	12
   341   007FA2  1883               	xorwf	131,w,c	;volatile
   342   007FA4  A4D8               	btfss	status,2,c
   343   007FA6  EFD7  F03F         	goto	u131
   344   007FAA  EFD9  F03F         	goto	u130
   345   007FAE                     u131:
   346   007FAE  EFDB  F03F         	goto	l764
   347   007FB2                     u130:
   348   007FB2                     
   349                           ;main.c: 57:             LATB = display_array[12];
   350   007FB2  C019  FF8A         	movff	_display_array+24,3978	;volatile
   351   007FB6                     l764:
   352                           
   353                           ;main.c: 59:         if(PORTD == 13){
   354   007FB6  0E0D               	movlw	13
   355   007FB8  1883               	xorwf	131,w,c	;volatile
   356   007FBA  A4D8               	btfss	status,2,c
   357   007FBC  EFE2  F03F         	goto	u141
   358   007FC0  EFE4  F03F         	goto	u140
   359   007FC4                     u141:
   360   007FC4  EFE6  F03F         	goto	l768
   361   007FC8                     u140:
   362   007FC8                     
   363                           ;main.c: 60:             LATB = display_array[13];
   364   007FC8  C01B  FF8A         	movff	_display_array+26,3978	;volatile
   365   007FCC                     l768:
   366                           
   367                           ;main.c: 62:         if(PORTD == 14){
   368   007FCC  0E0E               	movlw	14
   369   007FCE  1883               	xorwf	131,w,c	;volatile
   370   007FD0  A4D8               	btfss	status,2,c
   371   007FD2  EFED  F03F         	goto	u151
   372   007FD6  EFEF  F03F         	goto	u150
   373   007FDA                     u151:
   374   007FDA  EFF1  F03F         	goto	l772
   375   007FDE                     u150:
   376   007FDE                     
   377                           ;main.c: 63:             LATB = display_array[14];
   378   007FDE  C01D  FF8A         	movff	_display_array+28,3978	;volatile
   379   007FE2                     l772:
   380                           
   381                           ;main.c: 65:         if(PORTD == 15){
   382   007FE2  0E0F               	movlw	15
   383   007FE4  1883               	xorwf	131,w,c	;volatile
   384   007FE6  A4D8               	btfss	status,2,c
   385   007FE8  EFF8  F03F         	goto	u161
   386   007FEC  EFFA  F03F         	goto	u160
   387   007FF0                     u161:
   388   007FF0  EF48  F03F         	goto	l17
   389   007FF4                     u160:
   390   007FF4                     
   391                           ;main.c: 66:             LATB = display_array[15];
   392   007FF4  C01F  FF8A         	movff	_display_array+30,3978	;volatile
   393   007FF8  EF48  F03F         	goto	l17
   394   007FFC  EF00  F000         	goto	start
   395   008000                     __end_of_main:
   396                           	callstack 0
   397   000000                     
   398                           	psect	rparam
   399   000000                     
   400                           	psect	idloc
   401                           
   402                           ;Config register IDLOC0 @ 0x200000
   403                           ;	unspecified, using default values
   404   200000                     	org	2097152
   405   200000  FF                 	db	255
   406                           
   407                           ;Config register IDLOC1 @ 0x200001
   408                           ;	unspecified, using default values
   409   200001                     	org	2097153
   410   200001  FF                 	db	255
   411                           
   412                           ;Config register IDLOC2 @ 0x200002
   413                           ;	unspecified, using default values
   414   200002                     	org	2097154
   415   200002  FF                 	db	255
   416                           
   417                           ;Config register IDLOC3 @ 0x200003
   418                           ;	unspecified, using default values
   419   200003                     	org	2097155
   420   200003  FF                 	db	255
   421                           
   422                           ;Config register IDLOC4 @ 0x200004
   423                           ;	unspecified, using default values
   424   200004                     	org	2097156
   425   200004  FF                 	db	255
   426                           
   427                           ;Config register IDLOC5 @ 0x200005
   428                           ;	unspecified, using default values
   429   200005                     	org	2097157
   430   200005  FF                 	db	255
   431                           
   432                           ;Config register IDLOC6 @ 0x200006
   433                           ;	unspecified, using default values
   434   200006                     	org	2097158
   435   200006  FF                 	db	255
   436                           
   437                           ;Config register IDLOC7 @ 0x200007
   438                           ;	unspecified, using default values
   439   200007                     	org	2097159
   440   200007  FF                 	db	255
   441                           
   442                           	psect	config
   443                           
   444                           ;Config register CONFIG1L @ 0x300000
   445                           ;	PLL Prescaler Selection bits
   446                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   447                           ;	System Clock Postscaler Selection bits
   448                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   449                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   450                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   451   300000                     	org	3145728
   452   300000  00                 	db	0
   453                           
   454                           ;Config register CONFIG1H @ 0x300001
   455                           ;	Oscillator Selection bits
   456                           ;	FOSC = HS, HS oscillator (HS)
   457                           ;	Fail-Safe Clock Monitor Enable bit
   458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   459                           ;	Internal/External Oscillator Switchover bit
   460                           ;	IESO = OFF, Oscillator Switchover mode disabled
   461   300001                     	org	3145729
   462   300001  0C                 	db	12
   463                           
   464                           ;Config register CONFIG2L @ 0x300002
   465                           ;	Power-up Timer Enable bit
   466                           ;	PWRT = OFF, PWRT disabled
   467                           ;	Brown-out Reset Enable bits
   468                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   469                           ;	Brown-out Reset Voltage bits
   470                           ;	BORV = 3, Minimum setting 2.05V
   471                           ;	USB Voltage Regulator Enable bit
   472                           ;	VREGEN = OFF, USB voltage regulator disabled
   473   300002                     	org	3145730
   474   300002  1F                 	db	31
   475                           
   476                           ;Config register CONFIG2H @ 0x300003
   477                           ;	Watchdog Timer Enable bit
   478                           ;	WDT = ON, WDT enabled
   479                           ;	Watchdog Timer Postscale Select bits
   480                           ;	WDTPS = 32768, 1:32768
   481   300003                     	org	3145731
   482   300003  1F                 	db	31
   483                           
   484                           ; Padding undefined space
   485   300004                     	org	3145732
   486   300004  FF                 	db	255
   487                           
   488                           ;Config register CONFIG3H @ 0x300005
   489                           ;	CCP2 MUX bit
   490                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   491                           ;	PORTB A/D Enable bit
   492                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   493                           ;	Low-Power Timer 1 Oscillator Enable bit
   494                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   495                           ;	MCLR Pin Enable bit
   496                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   497   300005                     	org	3145733
   498   300005  83                 	db	131
   499                           
   500                           ;Config register CONFIG4L @ 0x300006
   501                           ;	Stack Full/Underflow Reset Enable bit
   502                           ;	STVREN = ON, Stack full/underflow will cause Reset
   503                           ;	Single-Supply ICSP Enable bit
   504                           ;	LVP = ON, Single-Supply ICSP enabled
   505                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   506                           ;	ICPRT = OFF, ICPORT disabled
   507                           ;	Extended Instruction Set Enable bit
   508                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   509                           ;	Background Debugger Enable bit
   510                           ;	DEBUG = 0x1, unprogrammed default
   511   300006                     	org	3145734
   512   300006  85                 	db	133
   513                           
   514                           ; Padding undefined space
   515   300007                     	org	3145735
   516   300007  FF                 	db	255
   517                           
   518                           ;Config register CONFIG5L @ 0x300008
   519                           ;	Code Protection bit
   520                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   521                           ;	Code Protection bit
   522                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   523                           ;	Code Protection bit
   524                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   525                           ;	Code Protection bit
   526                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   527   300008                     	org	3145736
   528   300008  0F                 	db	15
   529                           
   530                           ;Config register CONFIG5H @ 0x300009
   531                           ;	Boot Block Code Protection bit
   532                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   533                           ;	Data EEPROM Code Protection bit
   534                           ;	CPD = OFF, Data EEPROM is not code-protected
   535   300009                     	org	3145737
   536   300009  C0                 	db	192
   537                           
   538                           ;Config register CONFIG6L @ 0x30000A
   539                           ;	Write Protection bit
   540                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   541                           ;	Write Protection bit
   542                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   543                           ;	Write Protection bit
   544                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   545                           ;	Write Protection bit
   546                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   547   30000A                     	org	3145738
   548   30000A  0F                 	db	15
   549                           
   550                           ;Config register CONFIG6H @ 0x30000B
   551                           ;	Configuration Register Write Protection bit
   552                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   553                           ;	Boot Block Write Protection bit
   554                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   555                           ;	Data EEPROM Write Protection bit
   556                           ;	WRTD = OFF, Data EEPROM is not write-protected
   557   30000B                     	org	3145739
   558   30000B  E0                 	db	224
   559                           
   560                           ;Config register CONFIG7L @ 0x30000C
   561                           ;	Table Read Protection bit
   562                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   563                           ;	Table Read Protection bit
   564                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   565                           ;	Table Read Protection bit
   566                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   567                           ;	Table Read Protection bit
   568                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   569   30000C                     	org	3145740
   570   30000C  0F                 	db	15
   571                           
   572                           ;Config register CONFIG7H @ 0x30000D
   573                           ;	Boot Block Table Read Protection bit
   574                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   575   30000D                     	org	3145741
   576   30000D  40                 	db	64
   577                           tosu	equ	0xFFF
   578                           tosh	equ	0xFFE
   579                           tosl	equ	0xFFD
   580                           stkptr	equ	0xFFC
   581                           pclatu	equ	0xFFB
   582                           pclath	equ	0xFFA
   583                           pcl	equ	0xFF9
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           prodh	equ	0xFF4
   589                           prodl	equ	0xFF3
   590                           indf0	equ	0xFEF
   591                           postinc0	equ	0xFEE
   592                           postdec0	equ	0xFED
   593                           preinc0	equ	0xFEC
   594                           plusw0	equ	0xFEB
   595                           fsr0h	equ	0xFEA
   596                           fsr0l	equ	0xFE9
   597                           wreg	equ	0xFE8
   598                           indf1	equ	0xFE7
   599                           postinc1	equ	0xFE6
   600                           postdec1	equ	0xFE5
   601                           preinc1	equ	0xFE4
   602                           plusw1	equ	0xFE3
   603                           fsr1h	equ	0xFE2
   604                           fsr1l	equ	0xFE1
   605                           bsr	equ	0xFE0
   606                           indf2	equ	0xFDF
   607                           postinc2	equ	0xFDE
   608                           postdec2	equ	0xFDD
   609                           preinc2	equ	0xFDC
   610                           plusw2	equ	0xFDB
   611                           fsr2h	equ	0xFDA
   612                           fsr2l	equ	0xFD9
   613                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0      20       1       33.7%
BITBIGSFRh          3E      0       0      21        0.0%
BITBIGSFRlhh        2B      0       0      22        0.0%
BITBIGSFRlll        23      0       0      26        0.0%
BITBIGSFRllhh        8      0       0      24        0.0%
BITBIGSFRllhl        6      0       0      25        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       3        0.0%
DATA                 0      0      20       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 01 14:43:30 2024

                     l17 7E90                       u10 7EAC                       u11 7EA8  
                     u20 7EC0                       u21 7EBC                       u30 7ED6  
                     u31 7ED2                       u40 7EEC                       u41 7EE8  
                     u50 7F02                       u51 7EFE                       u60 7F18  
                     u61 7F14                       u70 7F2E                       u71 7F2A  
                     u80 7F44                       u81 7F40                       u90 7F5A  
                     u91 7F56                      l720 7EC4                      l712 7E90  
                    l730 7F02                      l722 7ED6                      l714 7EAC  
                    l740 7F32                      l732 7F06                      l724 7EDA  
                    l716 7EB0                      l750 7F70                      l742 7F44  
                    l734 7F18                      l726 7EEC                      l718 7EC0  
                    l760 7FA0                      l752 7F74                      l744 7F48  
                    l736 7F1C                      l728 7EF0                      l770 7FDE  
                    l762 7FB2                      l754 7F86                      l746 7F5A  
                    l738 7F2E                      l772 7FE2                      l764 7FB6  
                    l756 7F8A                      l748 7F5E                      l774 7FF4  
                    l766 7FC8                      l758 7F9C                      l768 7FCC  
                    u100 7F70                      u101 7F6C                      u110 7F86  
                    u111 7F82                      u120 7F9C                      u121 7F98  
                    u130 7FB2                      u131 7FAE                      u140 7FC8  
                    u141 7FC4                      u150 7FDE                      u151 7FDA  
                    u160 7FF4                      u161 7FF0                     _LATB 000F8A  
                   _main 7E90                     fsr1l 000FE1                     start 0000  
           ___param_bank 000000                    ?_main 0000                    _PORTD 000F83  
                  _TRISB 000F93                    _TRISD 000F95                    tablat 000FF5  
                  status 000FD8          __initialization 7E6A             __end_of_main 8000  
                 ??_main 0000            __activetblptr 000000                   _ADCON1 000FC1  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7E8A            ___rparam_used 000001           __pcstackCOMRAM 0000  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E6A  
                __ramtop 0800                  __ptext0 7E90     end_of_initialization 7E8A  
                postdec1 000FE5                  postinc0 000FEE            __pidataCOMRAM 7E4A  
    start_initialization 7E6A                copy_data0 7E7E                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000            _display_array 0001  
