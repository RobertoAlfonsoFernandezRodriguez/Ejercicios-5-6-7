

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 01 14:07:55 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   007F54                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display_array
    57   007F54  003F               	dw	63
    58   007F56  0006               	dw	6
    59   007F58  005B               	dw	91
    60   007F5A  004F               	dw	79
    61   007F5C  0066               	dw	102
    62   007F5E  006D               	dw	109
    63   007F60  007C               	dw	124
    64   007F62  0047               	dw	71
    65   007F64  007F               	dw	127
    66   007F66  0067               	dw	103
    67   007F68  0077               	dw	119
    68   007F6A  007C               	dw	124
    69   007F6C  0039               	dw	57
    70   007F6E  005E               	dw	94
    71   007F70  0079               	dw	121
    72   007F72  0071               	dw	113
    73   000000                     _LATD	set	3980
    74   000000                     _TRISD	set	3989
    75   000000                     _ADCON1	set	4033
    76                           
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80   007F74                     __pcinit:
    81                           	callstack 0
    82   007F74                     start_initialization:
    83                           	callstack 0
    84   007F74                     __initialization:
    85                           	callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (32 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89   007F74  0E54               	movlw	low __pidataCOMRAM
    90   007F76  6EF6               	movwf	tblptrl,c
    91   007F78  0E7F               	movlw	high __pidataCOMRAM
    92   007F7A  6EF7               	movwf	tblptrh,c
    93   007F7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94   007F7E  6EF8               	movwf	tblptru,c
    95   007F80  EE00  F001         	lfsr	0,__pdataCOMRAM
    96   007F84  EE10 F020          	lfsr	1,32
    97   007F88                     copy_data0:
    98   007F88  0009               	tblrd		*+
    99   007F8A  CFF5 FFEE          	movff	tablat,postinc0
   100   007F8E  50E5               	movf	postdec1,w,c
   101   007F90  50E1               	movf	fsr1l,w,c
   102   007F92  E1FA               	bnz	copy_data0
   103                           
   104                           ; Clear objects allocated to COMRAM (2 bytes)
   105   007F94  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106   007F96  6A25               	clrf	__pbssCOMRAM& (0+255),c
   107   007F98                     end_of_initialization:
   108                           	callstack 0
   109   007F98                     __end_of__initialization:
   110                           	callstack 0
   111   007F98  0100               	movlb	0
   112   007F9A  EFCF  F03F         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMRAM
   115   000025                     __pbssCOMRAM:
   116                           	callstack 0
   117   000025                     _value:
   118                           	callstack 0
   119   000025                     	ds	2
   120                           
   121                           	psect	dataCOMRAM
   122   000001                     __pdataCOMRAM:
   123                           	callstack 0
   124   000001                     _display_array:
   125                           	callstack 0
   126   000001                     	ds	32
   127                           
   128                           	psect	cstackCOMRAM
   129   000021                     __pcstackCOMRAM:
   130                           	callstack 0
   131   000021                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x0
   134   000021                     	ds	2
   135   000023                     main@i:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x2
   139   000023                     	ds	2
   140                           
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 16 in file "main.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;  i               2    2[COMRAM] int 
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   160 ;;      Params:         0       0       0       0       0       0       0       0       0
   161 ;;      Locals:         2       0       0       0       0       0       0       0       0
   162 ;;      Temps:          2       0       0       0       0       0       0       0       0
   163 ;;      Totals:         4       0       0       0       0       0       0       0       0
   164 ;;Total ram usage:        4 bytes
   165 ;; This function calls:
   166 ;;		Nothing
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173   007F9E                     __ptext0:
   174                           	callstack 0
   175   007F9E                     _main:
   176                           	callstack 31
   177   007F9E                     
   178                           ;main.c: 17:     ADCON1 = 0B00001111;
   179   007F9E  0E0F               	movlw	15
   180   007FA0  6EC1               	movwf	193,c	;volatile
   181                           
   182                           ;main.c: 18:     TRISD = 0;
   183   007FA2  0E00               	movlw	0
   184   007FA4  6E95               	movwf	149,c	;volatile
   185                           
   186                           ;main.c: 19:     for(int i=0; i<=15; i++){
   187   007FA6  0E00               	movlw	0
   188   007FA8  6E24               	movwf	(main@i+1)^0,c
   189   007FAA  0E00               	movlw	0
   190   007FAC  6E23               	movwf	main@i^0,c
   191   007FAE                     l701:
   192                           
   193                           ;main.c: 20:         LATD = display_array[i];
   194   007FAE  90D8               	bcf	status,0,c
   195   007FB0  3423               	rlcf	main@i^0,w,c
   196   007FB2  6ED9               	movwf	fsr2l,c
   197   007FB4  3424               	rlcf	(main@i+1)^0,w,c
   198   007FB6  6EDA               	movwf	fsr2h,c
   199   007FB8  0E01               	movlw	low _display_array
   200   007FBA  26D9               	addwf	fsr2l,f,c
   201   007FBC  0E00               	movlw	high _display_array
   202   007FBE  22DA               	addwfc	fsr2h,f,c
   203   007FC0  50DF               	movf	indf2,w,c
   204   007FC2  6E8C               	movwf	140,c	;volatile
   205   007FC4                     
   206                           ;main.c: 21:         _delay((unsigned long)((500)*(20000000/4000.0)));
   207   007FC4  0E0D               	movlw	13
   208   007FC6  6E22               	movwf	(??_main+1)^0,c
   209   007FC8  0EAF               	movlw	175
   210   007FCA  6E21               	movwf	??_main^0,c
   211   007FCC  0EB6               	movlw	182
   212   007FCE                     u27:
   213   007FCE  2EE8               	decfsz	wreg,f,c
   214   007FD0  D7FE               	bra	u27
   215   007FD2  2E21               	decfsz	??_main^0,f,c
   216   007FD4  D7FC               	bra	u27
   217   007FD6  2E22               	decfsz	(??_main+1)^0,f,c
   218   007FD8  D7FA               	bra	u27
   219   007FDA  D000               	nop2	
   220   007FDC                     
   221                           ;main.c: 22:     }
   222   007FDC  4A23               	infsnz	main@i^0,f,c
   223   007FDE  2A24               	incf	(main@i+1)^0,f,c
   224   007FE0  BE24               	btfsc	(main@i+1)^0,7,c
   225   007FE2  EFFC  F03F         	goto	u11
   226   007FE6  5024               	movf	(main@i+1)^0,w,c
   227   007FE8  E109               	bnz	u10
   228   007FEA  0E10               	movlw	16
   229   007FEC  5C23               	subwf	main@i^0,w,c
   230   007FEE  A0D8               	btfss	status,0,c
   231   007FF0  EFFC  F03F         	goto	u11
   232   007FF4  EFFE  F03F         	goto	u10
   233   007FF8                     u11:
   234   007FF8  EFD7  F03F         	goto	l701
   235   007FFC                     u10:
   236   007FFC  EF00  F000         	goto	start
   237   008000                     __end_of_main:
   238                           	callstack 0
   239   000000                     
   240                           	psect	rparam
   241   000000                     
   242                           	psect	idloc
   243                           
   244                           ;Config register IDLOC0 @ 0x200000
   245                           ;	unspecified, using default values
   246   200000                     	org	2097152
   247   200000  FF                 	db	255
   248                           
   249                           ;Config register IDLOC1 @ 0x200001
   250                           ;	unspecified, using default values
   251   200001                     	org	2097153
   252   200001  FF                 	db	255
   253                           
   254                           ;Config register IDLOC2 @ 0x200002
   255                           ;	unspecified, using default values
   256   200002                     	org	2097154
   257   200002  FF                 	db	255
   258                           
   259                           ;Config register IDLOC3 @ 0x200003
   260                           ;	unspecified, using default values
   261   200003                     	org	2097155
   262   200003  FF                 	db	255
   263                           
   264                           ;Config register IDLOC4 @ 0x200004
   265                           ;	unspecified, using default values
   266   200004                     	org	2097156
   267   200004  FF                 	db	255
   268                           
   269                           ;Config register IDLOC5 @ 0x200005
   270                           ;	unspecified, using default values
   271   200005                     	org	2097157
   272   200005  FF                 	db	255
   273                           
   274                           ;Config register IDLOC6 @ 0x200006
   275                           ;	unspecified, using default values
   276   200006                     	org	2097158
   277   200006  FF                 	db	255
   278                           
   279                           ;Config register IDLOC7 @ 0x200007
   280                           ;	unspecified, using default values
   281   200007                     	org	2097159
   282   200007  FF                 	db	255
   283                           
   284                           	psect	config
   285                           
   286                           ;Config register CONFIG1L @ 0x300000
   287                           ;	PLL Prescaler Selection bits
   288                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   289                           ;	System Clock Postscaler Selection bits
   290                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   291                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   292                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   293   300000                     	org	3145728
   294   300000  00                 	db	0
   295                           
   296                           ;Config register CONFIG1H @ 0x300001
   297                           ;	Oscillator Selection bits
   298                           ;	FOSC = HS, HS oscillator (HS)
   299                           ;	Fail-Safe Clock Monitor Enable bit
   300                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   301                           ;	Internal/External Oscillator Switchover bit
   302                           ;	IESO = OFF, Oscillator Switchover mode disabled
   303   300001                     	org	3145729
   304   300001  0C                 	db	12
   305                           
   306                           ;Config register CONFIG2L @ 0x300002
   307                           ;	Power-up Timer Enable bit
   308                           ;	PWRT = OFF, PWRT disabled
   309                           ;	Brown-out Reset Enable bits
   310                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   311                           ;	Brown-out Reset Voltage bits
   312                           ;	BORV = 3, Minimum setting 2.05V
   313                           ;	USB Voltage Regulator Enable bit
   314                           ;	VREGEN = OFF, USB voltage regulator disabled
   315   300002                     	org	3145730
   316   300002  1F                 	db	31
   317                           
   318                           ;Config register CONFIG2H @ 0x300003
   319                           ;	Watchdog Timer Enable bit
   320                           ;	WDT = ON, WDT enabled
   321                           ;	Watchdog Timer Postscale Select bits
   322                           ;	WDTPS = 32768, 1:32768
   323   300003                     	org	3145731
   324   300003  1F                 	db	31
   325                           
   326                           ; Padding undefined space
   327   300004                     	org	3145732
   328   300004  FF                 	db	255
   329                           
   330                           ;Config register CONFIG3H @ 0x300005
   331                           ;	CCP2 MUX bit
   332                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   333                           ;	PORTB A/D Enable bit
   334                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   335                           ;	Low-Power Timer 1 Oscillator Enable bit
   336                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   337                           ;	MCLR Pin Enable bit
   338                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   339   300005                     	org	3145733
   340   300005  83                 	db	131
   341                           
   342                           ;Config register CONFIG4L @ 0x300006
   343                           ;	Stack Full/Underflow Reset Enable bit
   344                           ;	STVREN = ON, Stack full/underflow will cause Reset
   345                           ;	Single-Supply ICSP Enable bit
   346                           ;	LVP = ON, Single-Supply ICSP enabled
   347                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   348                           ;	ICPRT = OFF, ICPORT disabled
   349                           ;	Extended Instruction Set Enable bit
   350                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   351                           ;	Background Debugger Enable bit
   352                           ;	DEBUG = 0x1, unprogrammed default
   353   300006                     	org	3145734
   354   300006  85                 	db	133
   355                           
   356                           ; Padding undefined space
   357   300007                     	org	3145735
   358   300007  FF                 	db	255
   359                           
   360                           ;Config register CONFIG5L @ 0x300008
   361                           ;	Code Protection bit
   362                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   363                           ;	Code Protection bit
   364                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   365                           ;	Code Protection bit
   366                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   367                           ;	Code Protection bit
   368                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   369   300008                     	org	3145736
   370   300008  0F                 	db	15
   371                           
   372                           ;Config register CONFIG5H @ 0x300009
   373                           ;	Boot Block Code Protection bit
   374                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   375                           ;	Data EEPROM Code Protection bit
   376                           ;	CPD = OFF, Data EEPROM is not code-protected
   377   300009                     	org	3145737
   378   300009  C0                 	db	192
   379                           
   380                           ;Config register CONFIG6L @ 0x30000A
   381                           ;	Write Protection bit
   382                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   383                           ;	Write Protection bit
   384                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   385                           ;	Write Protection bit
   386                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   387                           ;	Write Protection bit
   388                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   389   30000A                     	org	3145738
   390   30000A  0F                 	db	15
   391                           
   392                           ;Config register CONFIG6H @ 0x30000B
   393                           ;	Configuration Register Write Protection bit
   394                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   395                           ;	Boot Block Write Protection bit
   396                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   397                           ;	Data EEPROM Write Protection bit
   398                           ;	WRTD = OFF, Data EEPROM is not write-protected
   399   30000B                     	org	3145739
   400   30000B  E0                 	db	224
   401                           
   402                           ;Config register CONFIG7L @ 0x30000C
   403                           ;	Table Read Protection bit
   404                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   405                           ;	Table Read Protection bit
   406                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   407                           ;	Table Read Protection bit
   408                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   409                           ;	Table Read Protection bit
   410                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   411   30000C                     	org	3145740
   412   30000C  0F                 	db	15
   413                           
   414                           ;Config register CONFIG7H @ 0x30000D
   415                           ;	Boot Block Table Read Protection bit
   416                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   417   30000D                     	org	3145741
   418   30000D  40                 	db	64
   419                           tosu	equ	0xFFF
   420                           tosh	equ	0xFFE
   421                           tosl	equ	0xFFD
   422                           stkptr	equ	0xFFC
   423                           pclatu	equ	0xFFB
   424                           pclath	equ	0xFFA
   425                           pcl	equ	0xFF9
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           prodh	equ	0xFF4
   431                           prodl	equ	0xFF3
   432                           indf0	equ	0xFEF
   433                           postinc0	equ	0xFEE
   434                           postdec0	equ	0xFED
   435                           preinc0	equ	0xFEC
   436                           plusw0	equ	0xFEB
   437                           fsr0h	equ	0xFEA
   438                           fsr0l	equ	0xFE9
   439                           wreg	equ	0xFE8
   440                           indf1	equ	0xFE7
   441                           postinc1	equ	0xFE6
   442                           postdec1	equ	0xFE5
   443                           preinc1	equ	0xFE4
   444                           plusw1	equ	0xFE3
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           bsr	equ	0xFE0
   448                           indf2	equ	0xFDF
   449                           postinc2	equ	0xFDE
   450                           postdec2	equ	0xFDD
   451                           preinc2	equ	0xFDC
   452                           plusw2	equ	0xFDB
   453                           fsr2h	equ	0xFDA
   454                           fsr2l	equ	0xFD9
   455                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      4      26       1       40.0%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlll        2C      0       0      23        0.0%
BITBIGSFRlh         2B      0       0      21        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26      24        0.0%
DATA                 0      0      26       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 01 14:07:55 2024

                     l19 7FFC                       u10 7FFC                       u11 7FF8  
                     u27 7FCE                      l701 7FAE                      l703 7FC4  
                    l705 7FDC                      l707 7FE0                      l695 7F9E  
                    wreg 000FE8                     _LATD 000F8C                     _main 7F9E  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 0021                    _TRISD 000F95                    _value 0025  
                  main@i 0023                    tablat 000FF5                    status 000FD8  
        __initialization 7F74             __end_of_main 8000                   ??_main 0021  
          __activetblptr 000000                   _ADCON1 000FC1                   isa$std 000001  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7F98  
          ___rparam_used 000001           __pcstackCOMRAM 0021                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F74                  __ramtop 0800  
                __ptext0 7F9E     end_of_initialization 7F98                  postdec1 000FE5  
                postinc0 000FEE            __pidataCOMRAM 7F54      start_initialization 7F74  
            __pbssCOMRAM 0025                copy_data0 7F88                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000            _display_array 0001  
